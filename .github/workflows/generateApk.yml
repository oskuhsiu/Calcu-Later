name: Build Android APK or AAB and Release

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release tag (e.g., v1.0.0)'
        required: true
      build_type:
        description: 'Build type (apk or aab)'
        required: true
        default: 'apk'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Grant write access for creating Releases
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: master  # Specify the branch, e.g., master

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Decode Keystore
        env:
          SIGNING_JKS_FILE: ${{ secrets.SIGNING_JKS_FILE }}
        run: echo "$SIGNING_JKS_FILE" | base64 -d > android-signing-keystore.jks

      - name: Build Release
        id: build
        run: |
          chmod +x ./gradlew
          if [ "${{ inputs.build_type }}" = "apk" ]; then
            ./gradlew assembleRelease
            echo "artifact_path=app/build/outputs/apk/release/*.apk" >> $GITHUB_OUTPUT
          elif [ "${{ inputs.build_type }}" = "aab" ]; then
            ./gradlew bundleRelease
            echo "artifact_path=app/build/outputs/bundle/release/*.aab" >> $GITHUB_OUTPUT
          else
            echo "Invalid build_type: ${{ inputs.build_type }}"
            exit 1
          fi
        env:
          SIGNING_KEYSTORE: android-signing-keystore.jks
          SIGNING_KEYSTORE_PASSWORD: ${{ secrets.SIGNING_KEYSTORE_PASSWORD }}
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ inputs.release_tag }}
          files: ${{ steps.build.outputs.artifact_path }}
          generate_release_notes: true
